zestawienie_makr
	!utworz_katownik_area
	!ustaw_numerowanie
	!kontakt_powierzchni
	!sprzezenie_wezlow
	!wybierz_pobliskie_wezly
	!kontakt_powierzchnia_belka
	!uruchom_skrypt
/EOF


utworz_katownik_area
	!Tworzy dwie prostopad³e do siebie powierzchnie, stanowi¹ce geometriê
	!do zamodelowania k¹townika.
	!
	!ARG1  - szerokoœc k¹townika
	!ARG2  - d³ugoœæ k¹townika
	!ARG3  - numer æwiartki wzglêdem WorkPlane
	!ARG4  - numer k¹townika
	!
	!P³aszczyzny tworzone s¹ wzglêdem aktualnie ustalonego WorkPlane.
	!Przeciêcie osi X i Y stanowi jednoczeœnie miejsce przecieci¹ tworzonych
	!powierzchni, natomiast kierunku wzd³u¿ny (paramter ARG2) wyznacza oœ Z.
	!Parametr ARG3 pozwala wybraæ orgientacjê p³aszczyzn (numer æwiartki)
	!w tym uk³adzie. Normalne p³aszczyzn skierowane s¹ na zewn¹trz k¹townika.
	!ARG4 pozwala zachowaæ porz¹dek numerowania obiektów tworz¹cych
	!geometriê - numery punktów, linii i powierzchni rozpoczynaj¹ siê od
	!wartoœci równych 10*ARG4.

	/COM, ***START: utworz_katownik_area***

	!zapamiêtanie numeru aktywnego uk³adu wspó³rzêdnych
	*GET, akt_uklad, ACTIVE, 0, CSYS,,,
	!obrócenie WorkPlane do odpowiedniej æwiartki
	WPROTA, 90*(ARG3-1), 0, 0
	!utworzenie i aktywacja tymczasowego uk³adu, zgodnego z aktualnym WorkPlane
	CSWPLA, 100, CART

	!ustawienia numeracji
	*USE,ustaw_numerowanie, ARG4*100

	!utworzenie punktów naro¿nych
	K,,	0,		0,		0
	K,,	ARG1,	0,		0
	K,,	0,		ARG1,	0
	K,,	0,		0,		ARG2
	K,,	ARG1,	0,		ARG2
	K,,	0,		ARG1,	ARG2

	!utworzenie powierzchni
	A, ARG4*100, ARG4*100+3, ARG4*100+4, ARG4*100+1
	AREVERSE, ARG4*100
	A, ARG4*100, ARG4*100+3, ARG4*100+5, ARG4*100+2

	*USE,ustaw_numerowanie, 0
	
	!usuniêcie uk³adu tymczasowego
	CSDELE, 100
	!aktywacja zapamiêtanego uk³adu
	CSYS, akt_uklad
	*SET, akt_uklad

	/COM, ***STOP: utworz_katownik_area***
/EOF


utworz_katownik_volu
	!Tworzy objêtoœæ maj¹c¹ kszta³t k¹townika. Dodatkowo ³¹czy
	!(opcja concatante) po dwie zewrznêtrzne i wewnêtrzne powierzchnie.
	!
	!ARG1  - szerokoœc k¹townika
	!ARG2  - d³ugoœæ k¹townika
	!ARG3  - gruboœæ k¹townika
	!ARG4  - numer æwiartki wzglêdem WorkPlane
	!ARG5  - numer k¹townika
	!
	!Po³¹czenie w pary wewnêtrznych i zewnêtrznych powierzchni ma na celu
	!umo¿liwienie natychmiastowego utworzenia regularnej siatki (mapped mesh).

	/COM, ***START: utworz_katownik_volu***

	!zapamiêtanie numeru aktywnego uk³adu wspó³rzêdnych
	*GET, akt_uklad, ACTIVE, 0, CSYS,,,
	!obrócenie WorkPlane do odpowiedniej æwiartki
	WPROTA, 90*(ARG4-1), 0, 0
	!utworzenie i aktywacja tymczasowego uk³adu, zgodnego z aktualnym WorkPlane
	CSWPLA, 100, CART

	!ustawienia numeracji
	nr=ARG5*100	!zmienna pomocnicza
	*USE,ustaw_numerowanie, nr

	!utworzenie geometrii
	K,, 0, 	0, 	 0
	K,, ARG1, 0, 	 0
	K,, ARG1, ARG3, 0
	K,, ARG3, ARG3, 0
	K,, ARG3, ARG1, 0
	K,, 0, 	ARG1, 0
	K,, 0, 	0, 	 ARG2
	K,, ARG1, 0, 	 ARG2
	K,, ARG1, ARG3, ARG2
	K,, ARG3, ARG3, ARG2
	K,, ARG3, ARG1, ARG2
	K,, 0, 	ARG1, ARG2

	V, nr, nr+3, nr+2, nr+1, nr+6, nr+9, nr+8, nr+7
	V, nr, nr+3, nr+4, nr+5, nr+6, nr+9, nr+10, nr+11

	*USE,ustaw_numerowanie, 0

	!usuniêcie uk³adu tymczasowego
	CSDELE, 100
	!aktywacja zapamiêtanego uk³adu
	CSYS, akt_uklad

	*SET, akt_uklad
	*SET, nr

	/COM, ***STOP: utworz_katownik_volu***
/EOF


ustaw_numerowanie
	!Ustawia pocz¹tek numerowania wszystkich tworzonych obiektów geometrii
	!zgodnie z podanym argumentem.
	!
	!ARG1  - numer od którego ma zostaæ rozpoczête numerowanie.
	
	NUMSTR, 	KP, 	 ARG1
	NUMSTR,	LINE, ARG1
	NUMSTR,	AREA, ARG1
	NUMSTR,	VOLU, ARG1

/EOF


kontakt_powierzchni
	!Tworzy ontakty zwi¹zane (typu bonded), rozwi¹zywane algorytmem MPC
	!pomiêdzy dwoma powierzchniami
	!
	!ARG1 - numer porz¹dkowy pary - wyznacza numery zbioru REAL, elementów itd.
	!ARG2 - numer powierzchni, na której zdefiniowane zostan¹
	!       elementy typu TARGE
	!ARG3 - orientacja normalnych powy¿szej powierzchni
	!ARG4 - numer powierzchni, na której zdefiniowane zostan¹
	!       elementy typu CONTA
	!ARG5 - orientacja normalnych powy¿szej powierzchni
	!
	!Makro dzia³a poprawnie, gdy numer elementu typu TARGE zosta³ zdefiniowany
	!jako 10, natomiast elementu typu CONTA jako 11

	/COM, ***START: kontakt_powloki***

  	*GET, akt_real, ACTIVE,, REAL
  	*GET, akt_type, ACTIVE,, TYPE
	R,		ARG1,,,,,,0.5
  	REAL,	ARG1
  	ET,		ARG1,	TARGE170
  	ET,		ARG1+500,	CONTA173
   	KEYOPT,	CONTA173,	2,	2	!KEYOPT(2)=2  - algorytm MPC
   	KEYOPT,	CONTA173,	12,	5	!KEYOPT(12)=5 - kontakt typu bonded (always)

	!elementy TARGE
	*USE, wybierz_pobliskie_wezly, ARG2, ARG4, tolerancja
  	TYPE, ARG1

	*IF, ARG3, LT, 0, THEN
  		ESURF,, BOTTOM
	*ELSE
		ESURF
	*ENDIF

	NSEL, ALL
  	ASEL, ALL
  	!elementy CONTA
  	*USE, wybierz_pobliskie_wezly, ARG4, ARG2, tolerancja
  	TYPE, ARG1+500

  	*IF, ARG5, LT, 0, THEN
  		ESURF,, BOTTOM
	*ELSE
		ESURF
	*ENDIF
	
	NSEL, ALL
  	ASEL, ALL
  	
  	REAL, akt_real
	TYPE, akt_type
	*SET, akt_real,
  	*SET, akt_type,
  	
  	ostatnia_para=ostatnia_para+1

	
	/COM, ***STOP: kontakt_powierzchni***
/EOF

kontakt_kilku_powierzchni
	!Tworzy kontakty zwi¹zane (typu bonded), rozwi¹zywane algorytmem MPC
	!pomiêdzy dwoma zestawami kilku powierzchni, zdefiniowanymi w tablicy
	!k_k_lista
	!
	!ARG1 - numer porz¹dkowy pierwszej pary - wyznacza numery zbioru REAL,
	!	   elementów itd. Jest inkrementowany dla kolejnych par
	!
	!Makro stanowi uogólnienie makra kontakt_powierzchni. Pozawala na
	!zdefiniowanie jednego zestawu elementów typu TARGE i CONTA na kilku
	!po³¹czonych ze sob¹ i le¿¹cych w jednej p³aszyczyŸnie powierzchniach.
	!Funkcjonalnoœæ taka jest niezbêdna w przypadku podzieleniu geometrii
	!jednej fizycznie powierzchni na kilka czêœci. Lista powierzchni do
	!po³¹czenia musi znajdowaæ siê w trójwymiarowej tablisy k_k_lista,
	!w której:
	!- kolejne wiersze reprezentuj¹ kolejne pary kontaktowe
	!- w danym wierszu, elementy na pierwszych kolumnach na kolejnych
	!  p³aszyznach s¹ list¹ powierzchni, na której zdefiniowane bêd¹ elementy
	!  typu TARGE i podobnie na drugich kolumnach elementy typu CONTA
	!- w danym wierszu element na pierwszej p³aszczyŸnie w trzeciej kolumnie
	!  oznacza tolerancjê kontaktu (zwi¹zane z dzia³aniem makra
	!  wybierz_pobliskie_wezly)
	!
	!Makro dzia³a poprawnie, gdy numer elementu typu TARGE zosta³ zdefiniowany
	!jako 10, natomiast elementu typu CONTA jako 11.

	/COM, ***START: kontakt_kilku_powierzchni***

  	*GET, akt_real, ACTIVE,, REAL
  	*GET, akt_type, ACTIVE,, TYPE

	*GET, ilosc_kontaktow, PARM, k_k_lista, DIM, 3

	*DO, ind, 1, ilosc_kontaktow, 1
		R,		ARG1+ind-1,,,,,,0.5
  		REAL,	ARG1+ind-1
		ET,		ARG1+ind-1,	TARGE170
  		ET,		ARG1+ind+500,	CONTA173
   		KEYOPT,	CONTA173,	2,	2	!KEYOPT(2)=2  - algorytm MPC
   		KEYOPT,	CONTA173,	12,	5	!KEYOPT(12)=5 - kontakt typu bonded (always)

		!sprawdzenie iloœci powierzchni na liœcie, na których zdefiniowane
		!bêd¹ elementy TARGE i CONTA
		*SET, ilosc_targe, 0
		*SET, ilosc_conta, 0
		*SET, ind2, 1
		ASEL, NONE
  		*DOWHILE, ind2
  			*IF, k_k_lista(ilosc_targe+1, 1, ind), EQ, 0, THEN
				ind2=0
			*ELSE
				ASEL, A,,, k_k_lista(ilosc_targe+1, 1, ind)
				ilosc_targe=ilosc_targe+1
			*ENDIF
  		*ENDDO
  		CM, pow_targe, AREA
  		ASEL, NONE
  		*SET, ind2, 1
  		*DOWHILE, ind2
  			*IF, k_k_lista(ilosc_conta+1, 2, ind), EQ, 0, THEN
				ind2=0
			*ELSE
				ASEL, A,,, k_k_lista(ilosc_conta+1, 2, ind)
				ilosc_conta=ilosc_conta+1
			*ENDIF
  		*ENDDO
  		CM, pow_conta, AREA

		!
		!Tworzenie elementów typu TARGE
		!

   		!utworzenie uk³adu wspó³rzêdnych w naro¿niku jednej z pow. CONTA
   		ASEL, S,,, k_k_lista(1, 2, ind)
   		LSLA, S
   		KSLL, S
   		LSEL, ALL

 		*VGET, kp_pow, KP,, KLIST
 		CSKP, 100, CART, kp_pow(1), kp_pow(2), kp_pow(3)
 		CSYS, 100
 		*SET, kp_pow

   		!wybór punktów na powierzchniach CONTA i zapisanie ich do tablicy
   		CMSEL, S, pow_conta
   		LSLA, S
   		KSLL, S
   		LSEL, ALL

 		*VGET, kp_pow, KP,, KLIST

 		!wyszukanie najmniejszych i najwiêkszych wartoœci wspó³rzêdnych X i Y
		!z wybranego zbioru punktów w utworzonym wczeœniej uk³adzie
		!wspó³rzêdnych
		*SET, najwieksze_x, 0
		*SET, najmniejsze_x, 0
		*SET, najwieksze_y, 0
		*SET, najmniejsze_y, 0

 		*GET, wymiar_tablicy, PARM, kp_pow, DIM, 1
 		*DO, ind2, 1, wymiar_tablicy, 1
 			!sprawdzenie, który wêze³ ma niezerowe wspó³rzêdne na p³aszczyŸnie XY
 			*IF, KX(kp_pow(ind2)), GT, najwieksze_x, THEN
				najwieksze_x=KX(kp_pow(ind2))
 			*ENDIF
			*IF, KX(kp_pow(ind2)), LT, najmniejsze_x, THEN
				najmniejsze_x=KX(kp_pow(ind2))
 			*ENDIF
 			*IF, KY(kp_pow(ind2)), GT, najwieksze_y, THEN
				najwieksze_y=KY(kp_pow(ind2))
 			*ENDIF
			*IF, KY(kp_pow(ind2)), LT, najmniejsze_y, THEN
				najmniejsze_y=KY(kp_pow(ind2))
 			*ENDIF
 		*ENDDO

 		!wybór wêz³ów znajduj¹cych siê na powierzchniach TARGE
       	CMSEL, S, pow_targe
 		NSLA, S, 1
 		!wyodrêbnienie z powy¿szego zbioru wêz³ów, których wspó³rzêdne s¹ projekcj¹
 		!na pow. CONTA
 		NSEL, R, LOC,X, najmniejsze_x+k_k_lista(1, 3, ind), najwieksze_x+k_k_lista(1, 3, ind)
 		NSEL, R, LOC,Y, najmniejsze_y+k_k_lista(1, 3, ind), najwieksze_y+k_k_lista(1, 3, ind)

 		!utworzenie elementów typu TARGE
 		TYPE, ARG1+ind-1
 		ESURF

 		CSDELE, 100
 		*SET, kp_pow

		!
		!Tworzenie elementów typu CONTA
		!

   		!utworzenie uk³adu wspó³rzêdnych w naro¿niku jednej z pow. TARGE
   		ASEL, S,,, k_k_lista(1, 1, ind)
   		LSLA, S
   		KSLL, S
   		LSEL, ALL

 		*VGET, kp_pow, KP,, KLIST
 		CSKP, 100, CART, kp_pow(1), kp_pow(2), kp_pow(3)
 		CSYS, 100
 		*SET, kp_pow

   		!wybór punktów na powierzchniach CONTA i zapisanie ich do tablicy
   		CMSEL, S, pow_targe
   		LSLA, S
   		KSLL, S
   		LSEL, ALL

 		*VGET, kp_pow, KP,, KLIST

 		!wyszukanie najmniejszych i najwiêkszych wartoœci wspó³rzêdnych X i Y
		!z wybranego zbioru punktów w utworzonym wczeœniej uk³adzie
		!wspó³rzêdnych
		*SET, najwieksze_x, 0
		*SET, najmniejsze_x, 0
		*SET, najwieksze_y, 0
		*SET, najmniejsze_y, 0

 		*GET, wymiar_tablicy, PARM, kp_pow, DIM, 1
 		*DO, ind2, 1, wymiar_tablicy, 1
 			!sprawdzenie, który wêze³ ma niezerowe wspó³rzêdne na p³aszczyŸnie XY
 			*IF, KX(kp_pow(ind2)), GT, najwieksze_x, THEN
				najwieksze_x=KX(kp_pow(ind2))
 			*ENDIF
			*IF, KX(kp_pow(ind2)), LT, najmniejsze_x, THEN
				najmniejsze_x=KX(kp_pow(ind2))
 			*ENDIF
 			*IF, KY(kp_pow(ind2)), GT, najwieksze_y, THEN
				najwieksze_y=KY(kp_pow(ind2))
 			*ENDIF
			*IF, KY(kp_pow(ind2)), LT, najmniejsze_y, THEN
				najmniejsze_y=KY(kp_pow(ind2))
 			*ENDIF
 		*ENDDO

 		!wybór wêz³ów znajduj¹cych siê na powierzchniach CONTA
       	CMSEL, S, pow_conta
 		NSLA, S, 1
 		!wyodrêbnienie z powy¿szego zbioru wêz³ów, których wspó³rzêdne s¹ projekcj¹
 		!na pow. CONTA
 		NSEL, R, LOC,X, najmniejsze_x+k_k_lista(1, 3, ind), najwieksze_x+k_k_lista(1, 3, ind)
 		NSEL, R, LOC,Y, najmniejsze_y+k_k_lista(1, 3, ind), najwieksze_y+k_k_lista(1, 3, ind)

 		!utworzenie elementów typu CONTA
 		TYPE, ARG1+ind+500
 		ESURF

 		CSDELE, 100
 		*SET, kp_pow

		ostatnia_para=ostatnia_para+1
	*ENDDO

  	REAL, akt_real
	TYPE, akt_type
	*SET, akt_real,
  	*SET, akt_type,
  	*SET, najwieksze_x
  	*SET, najmniejsze_x
  	*SET, najwieksze_y
  	*SET, najmniejsze_y
	*SET, ilosc_kontaktow
	*SET, ilosc_targe
	*SET, ilosc_conta
	*SET, ind
	*SET, ind2

	/COM, ***STOP: kontakt_kilku_powierzchni***
/EOF

naprezenia_sruby_beam
	!Nak³ada naprê¿enia wstêpne na œrubê utworzon¹ za pomoc¹ elementów belkowych
	!
	!ARG1 - numer linii, stanowi¹cej geometriê œruby
	!ARG2 - rodzaj nak³adanego obci¹¿enia:
	!	   0 (lub puste) - obci¹¿enie za pomoc¹ si³y
	!	   1 	       - obci¹¿enie w postaci przemieszczenia
	!ARG3 - wartoœæ obci¹¿enia
	!
	!Naprê¿enia nak³adane s¹ w œrodkowym przekroju œruby.
	
	!zapamiêtanie aktywnego uk³adu wspó³rzêdnych
	*GET, akt_uklad, ACTIVE,, CSYS
	*GET, akt_real, ACTIVE,, CSYS
	REAL, 1

	!utworzenie lub inkrementacja licznika przekrojów typu PRETN
	*GET, p, PARM, licznik_pretn, TYPE
	*IF, p, EQ, -1, THEN
		licznik_pretn=1
	*ELSE
		licznik_pretn=licznik_pretn+1
	*ENDIF

	*SET, p

	!utworzenie tymczasowego uk³. wspó³rzêdnych w osi œruby
	LWPL, -1, ARG1, 0.5
	CSWPLA, 100, CART

	!definicja przekroju naprê¿eñ wstêpnych
	PSMESH, licznik_pretn, STRCAT('pretn', CHRVAL(licznik_pretn)),, L, ARG1, 100, Z,, 0,,, STRCAT('pretn_elem', CHRVAL(licznik_pretn))

	!definicja obi¹¿enia
	*IF, ARG2, EQ, 1, THEN
		SLOAD, licznik_pretn, PL01, TINY, DISP, ARG3, 1
	*ELSE
		SLOAD, licznik_pretn, PL01, TINY, FORC, ARG3, 1, 2
	*ENDIF

	REAL, akt_real
	CSYS, akt_uklad
	WPCSYS, -1
	CSDELE, 100
	*SET, akt_uklad
	*SET, akt_real


/EOF

sprzezenie_wezloww
	!ARG1 - powierzchnia pierwsza
	!ARG2 - powierzchnia druga

	/COM, ***START: sprzezenie_wezlow***

	*USE, wybierz_pobliskie_wezly, ARG1, ARG2
	*VGET, wybrane_wezly, NODE,, NLIST
	*GET, ilosc_wezlow, NODE,, COUNT
	ASEL, S,,, ARG2
	NSLA, S, 1
	*DIM, wezly_pary, ARRAY, ilosc_wezlow
	*DO, ind, 1, ilosc_wezlow, 1
		wezly_pary(ind) = NNEAR(wybrane_wezly(ind))
		NSEL, U,,, wezly_pary(ind)
	*ENDDO

	*DO, ind, 1, ilosc_wezlow, 1
		NSEL,S,,, wezly_pary(ind)
		NSEL,A,,, wybrane_wezly(ind)
		CP,, ALL, ALL
	*ENDDO

	ASEL, ALL
	NSEL, ALL
	*SET, wybrane_wezly,
	*SET, ilosc_wezlow,
	*SET, wezly_pary,

	/COM, ***STOP: sprzezenie_wezlow***
/EOF


wybierz_pobliskie_wezly
	!Wybiera zbiór wêz³ów tworz¹cych siatkê jednej powierzchni oraz
	!rzutowanych na inn¹ powierzchniê prostok¹tn¹
	!
	!ARG1 	- numer powierzchni, z której maja zostaæ wybrane wêz³y
	!ARG2	- numer powierzchni, stanowi¹cej rzutniê
	!ARG3	- tolerancja
	!
	!Dzia³anie makra ma na celu wybór wêz³ów, które mog¹ zostaæ wykorzystane
	!do utworzenia elementów kontaktowych, równañ sprzê¿onych itp. Wynikowy
	!zbiór wybranych wêz³ów nale¿y rozumieæ jako czêœæ wspóln¹ zbioru wêz³ów
	!znajduj¹cych siê na powierzchni o numerze ARG1 oraz wszystkich wêz³ów
	!znajduj¹cych siê w przestrzeni trójwymiarowej, rzutowanych na
	!powierzchniê o numerze ARG2. Dodatkowo istnieje mo¿liwoœæ rozszerzenia
	!obszaru powierzchni ARG2, wprowadzaj¹c tolerancjê ARG3. Makro dzia³a
	!poprawnie tylko gdy ARG2 jest prostok¹tem.

	/COM, ***START: wybierz_pobliskie_wezly***

	!zapamiêtanie numeru aktywnego uk³adu wspó³rzêdnych
	*GET,akt_uklad, ACTIVE, 0, CSYS,,,

	!wybór punktów naro¿nych powierzchni ARG2 i zapisanie ich do tablicy
	ASEL, S,,, ARG2
	LSLA, S
	KSLL, S
	LSEL, ALL

	*VGET, kp_pow, KP,, KLIST
	!utworzenie i wybór uk³adu, w którym osie X i Y s¹ zgodne z kierunkami
	!linii tworz¹cych powierzchniê ARG2, a oœ Z zgodna z jej normaln¹
	CSKP, 100, CART, kp_pow(1), kp_pow(2), kp_pow(3)
	CSYS, 100
	!tworzenie tablicy ze wspó³rzêdnymi powy¿szych punktów
	*DIM, kp_wsp, ARRAY, 4, 4
	*DO, ind, 1, 4, 1
		kp_wsp(1,ind)=kp_pow(ind)
		kp_wsp(2,ind)=KX(kp_pow(ind))
		kp_wsp(3,ind)=KY(kp_pow(ind))
		kp_wsp(4,ind)=KZ(kp_pow(ind))
		!sprawdzenie, który wêze³ ma niezerowe wspó³rzêdne na p³aszczyŸnie XY
		*IF, kp_wsp(2,ind), GT, 0, AND, kp_wsp(3,ind), GT, 0, THEN
			najdalszy=kp_pow(ind)
		*ENDIF
	*ENDDO

	!wybór zbioru wêz³ów, których wspó³rzêdne s¹ projekcj¹ na pow. ARG2
	NSEL, S, LOC,X, -ARG3, KX(najdalszy)+ARG3
	NSEL, R, LOC,Y, -ARG3, KY(najdalszy)+ARG3

	!wyodrêbnienie z powy¿szego zbioru wêz³ów znajduj¹cych siê na pow. ARG1
	ASEL, S,,, ARG1
	NSLA, R, 1

	!wybór wszystkich powierzchni, linii i punktów
	ASEL, ALL
	LSEL, ALL
	KSEL, ALL
	!usuniêcie uk³adu tymczasowego
	CSDELE, 100
	!aktywacja zapamiêtanego uk³adu
	CSYS, akt_uklad
	*SET, kp_pow
	*SET, kp_wsp
	*SET, akt_uklad
	*SET, najdalszy

	/COM, ***STOP: wybierz_pobliskie_wezly***
/EOF


kontakt_powierzchnia_belka
	!Tworzy sta³e po³¹czenie (kontakt bonded, algorytm MPC) miêdzy belk¹
	!a powierzchni¹
	!
	!ARG1 - numer porz¹dkowy pary
	!ARG2 - numer linii stanowi¹cej geometriê belki
	!ARG3 - numer powierzchni
	!ARG4 - promieñ na powierzchni ARG3, wokó³ punktu nale¿acego do
	!	   linii ARG2, na której bêd¹ utworzone elementy CONTA
	/COM, ***START: kontakt_powierzchnia_belka***

  	*GET, akt_real, ACTIVE,, REAL
  	*GET, akt_type, ACTIVE,, TYPE
	R,		ARG1,,,,,,0.5
  	REAL,	ARG1
  	ET,		ARG1,	TARGE170
  	ET,		ARG1+500,	CONTA173
   	KEYOPT,	CONTA173,	2,	2	!KEYOPT(2)=2  - algorytm MPC
   	KEYOPT,	CONTA173,	5,	1	!KEYOPT(5)=1  - rozk³ad si³ i przemieszczeñ
   							!			 na elementach CONTA
   							!KEYOPT(5)=2  - sztywne po³¹czenie elmentów
   							!			 CONTA z wêz³em pilotuj¹cym
   							!Alternatywnie mo¿na ustawiæ opcjê:
   	KEYOPT,	CONTA173,	12,	5	!KEYOPT(12)=5 - kontakt typu bonded (always)

	!zapamiêtanie numeru aktywnego uk³adu wspó³rzêdnych
	*GET,akt_uklad, ACTIVE, 0, CSYS,,,
	
	!***
	!***tworzenie wêz³a pilotuj¹cego (pilot node)***
	!***

	!wybór punktów naro¿nych powierzchni ARG2 i zapisanie ich do tablicy
	ASEL, S,,, ARG3
	LSLA, S
	KSLL, S

	*VGET, kp_pow, KP,, KLIST
	!utworzenie i wybór uk³adu, w którym osie X i Y s¹ zgodne z kierunkami
	!linii tworz¹cych powierzchniê ARG2, a oœ Z zgodna z jej normaln¹
	CSKP, 100, CART, kp_pow(1), kp_pow(2), kp_pow(3)
	CSYS, 100

	!tworzenie tablicy ze wspó³rzêdnymi powy¿szych punktów
	*DIM, kp_wsp, ARRAY, 4, 4
	*DO, ind, 1, 4, 1
		kp_wsp(1,ind)=kp_pow(ind)
		kp_wsp(2,ind)=KX(kp_pow(ind))
		kp_wsp(3,ind)=KY(kp_pow(ind))
		kp_wsp(4,ind)=KZ(kp_pow(ind))
		!sprawdzenie, który wêze³ ma niezerowe wspó³rzêdne na p³aszczyŸnie XY
		*IF, kp_wsp(2,ind), GT, 0, AND, kp_wsp(3,ind), GT, 0, THEN
			najdalszy=kp_pow(ind)
		*ENDIF
	*ENDDO
	!wybór zbioru punktów znajduj¹cych siê w szeœcianie o wymiarach powierzchni
	!ARG1 i wysokoœci 2*ARG3
	KSEL, S, LOC, X, 0, KX(najdalszy)
	KSEL, R, LOC, Y, 0, KY(najdalszy)
	KSEL, R, LOC, Z, -1, 1
	!wybranie z powy¿szego zbioru punktu znajduj¹cego siê na linii ARG1
	LSEL, S,,, ARG2
	KSLL, R
	
	!utworzenie wêz³a pilotuj¹cego
	TYPE, ARG1
	KMESH, ALL
	
	ASEL, ALL
	LSEL, ALL
	KSEL, ALL
	*SET, kp_pow
	*SET, kp_wsp
	*SET, najdalszy
	CSDELE, 100
	
	!***
	!***tworzenie elementów CONTA***
	!***

	!utworzenie uk³adu cylindrycznego w osi linii ARG2
	LWPLAN, 1, ARG2
	CSWPLA, 100, CYLIN
	!wybranie wszystkich wêz³ów w cylindrze o œrednicy ARG4, którego
	!oœ pokrywa siê z lini¹ ARG4
	NSEL, S, LOC, X, 0, ARG4
	!wybór z powy¿szego zbioru wê¿³ów znajduj¹cych siê na powierzchni ARG3
	ASEL, S,,, ARG3
	NSLA, R

	!utworzenie elementów typu CONTA
	TYPE, ARG1+500
	ESURF
	
	!zwiêkszenie wartoœci licznika
	ostatnia_para=ostatnia_para+1

	!przywrócenie ustawieñ pocz¹tkowych
	!wybór wszystkich powierzchni, linii i punktów
	ASEL, ALL
	NSEL, ALL
	!usuniêcie uk³adu tymczasowego
	CSDELE, 100
	!aktywacja zapamiêtanego uk³adu
	CSYS, akt_uklad
	*SET, akt_uklad
	WPCSYS

	/COM, ***STOP: kontakt_powierzchnia_belka***
/EOF

utworz_stozek
	!tworzy sto¿ek, dla podanej orientacji i po³o¿enia wzglêdem aktywnego
	!uk³adu wspó³¿êdnych
	!
	!ARG1 - po³. X
	!ARG2 - po³. Y
	!ARG3 - po³. Z
	!ARG4 - orientacja (1 dla X, 2 dla Y, 3 dla Z)
	!ARG5 - zwrot (1 zgodnie ze zwrotem osi ARG4, -1 - przeciwnie)
	!
	!Makro utworzone w celu sprawdzenia poprawnoœci wprowadzonych po³o¿eñ
	!akcelerometrów (plik postprocesor.mac)

	WPCSYS
	WPOFFS, ARG1, ARG2, ARG3

	*IF, ARG4, EQ, 1, AND, ARG5, EQ, 1, THEN
		WPROTA, 0, 0, 90
	*ENDIF
	*IF, ARG4, EQ, 1, AND, ARG5, EQ, -1, THEN
		WPROTA, 0, 0, -90
	*ENDIF
	*IF, ARG4, EQ, 2, AND, ARG5, EQ, 1, THEN
		WPROTA, 0, -90, 0
	*ENDIF
	*IF, ARG4, EQ, 2, AND, ARG5, EQ, -1, THEN
		WPROTA, 0, 90, 0
	*ENDIF
	*IF, ARG4, EQ, 3, AND, ARG5, EQ, -1, THEN
		WPROTA, 0, 0, 180
	*ENDIF

	CONE, 20, 0, -30, 0, 0, 360
	
	WPCSYS

/EOF

utworz_srube_volu
	!Tworzy w ca³oœci model œruby napiêtej wstêpnie si³¹ w miejscu zgodnym z
	!WorkPlane. Geometria œruby utworzona jest z objêtoœci.
	!
	!ARG1 - numer, od którego rozpocznie siê numerowanie obiektów geometrii.
	!	   Do poprawnego dzia³ania makra, nale¿y przewidzieæ numer, od którego
	!	   wystêpuje 100 wolnych z rzêdu numerów obiektów KP, LINE, AREA i VOLU.
	!ARG2 - œrednica ³ba œruby i nakrêtki
	!ARG3 - wysokoœæ ³b¹ œruby i nakrêtki
	!ARG4 - œrednica rdzenia
	!ARG5 - d³ugoœæ rdzenia (wew. czêœæ, z pominiêciem wysokoœci ³ba i nakrêtki)
	!ARG6 - wartoœæ si³y napinaj¹cej œrubê. Je¿eli równa 0, przekrój zwi¹zany z
	!	   napiêciem wstêpnym nie jest tworzony.
	!ARG7 - liczba podzia³ów wzd³u¿ promienia ³ba i nakrêtki
	!ARG8 - liczba podzia³ów na elementy skoñczone wysokoœci ³ba i nakrêtki
	!ARG9 - liczba podzia³ów rdzenia wzd³u¿ promienia. Musi byæ liczb¹
	!	   parzyst¹. Jest identyczna z liczb¹ podzia³ów na jednej
	!	   czwartej obwodu nakrêtki (liczby te musz¹ byæ identyczne).
	!AR10 - d³ugoœæ elementów podzia³u wzd³u¿ osi rdzenia.
	!
	!Przed wywo³aniem makra nele¿y aktywowaæ rodzaj elementu o okreœlonym
	!numerze (elementy typu SOLID) oraz wybrany materia³ (komendy TYPE i MAT).
	!Ponadto w modelu musi istnieæ zbiór REAL o numerze 1, o trzech pierwszych
	!wartoœciach równych 0.
	!
	!Œruba tworzona jest w miejscu, w którym aktualnie znajduje siê WorkPlane.
	!Oœ rdzenia jest zgodna z osi¹ Z. Na p³aszczyŸnie XY znajduje siê dolna
	!czêœæ ³ba œruby - pocz¹tek rdzenia.

	*GET, akt_uklad, ACTIVE,, CSYS
	*GET, akt_real, ACTIVE,, REAL
	!chwilowy uk³ad wspó³rzêdnych
	CSWPLA, 100, CART
	CSYS, 100

	!utworzenie lub inkrementacja licznika przekrojów typu PRETN
	*GET, p, PARM, licznik_pretn, TYPE
	*IF, p, EQ, -1, THEN
		licznik_pretn=1
	*ELSE
		licznik_pretn=licznik_pretn+1
	*ENDIF

	*SET, p

	!
	!geometria
	!

	*USE, ustaw_numerowanie, ARG1
	WPOFFS, 0, 0, -ARG3
	CYL4, 0, 0, ARG2/2,,,, ARG3
	CYL4, 0, 0, ARG4/2,,,, ARG3
	VSBV, ARG1, ARG1+1,,, KEEP
	WPOFFS, 0, 0, ARG3

	VSEL, S,,, ARG1, ARG1+99
	WPROTA, 0, 90, 0
	VSBW, ALL
	WPROTA, 0, 0, -90
	VSBW, ALL

	VGEN, 2, ALL,,, 0, 0, ARG5+ARG3

 	ASEL, S,,, ARG1+5
 	ASEL, A,,, ARG1+21
 	ASEL, A,,, ARG1+25
 	ASEL, A,,, ARG1+29
 	VEXT, ALL,,, 0, 0, ARG5

 	KSEL, S,,, ARG1, ARG1+99
 	NUMMRG, KP

 	ALLSEL, ALL

	!
	!podzia³ na elementy
	!

	!definicja liczby podzia³ów
 	!nakrêtka i ³eb œruby
 	!wzd³u¿ promienia
 	LESIZE, ARG1+64,,, ARG7
 	LESIZE, ARG1+22,,, ARG7
 	 !wzd³u¿ wysokoœci
  	LESIZE, ARG1+21,,, ARG8
  	LESIZE, ARG1+31,,, ARG8
  	!rdzeñ
  	!wzd³u¿ promienia
  	LESIZE, ARG1+26,,, ARG9
  	!wzd³u¿ d³ugoœci
  	LESIZE, ARG1+87,   AR10

  	VSEL, S,,, ARG1, ARG1+99
 	VMESH, ALL

	!
	!na³o¿enie naprê¿eñ wstêpnych
	!

 	*IF, ARG6, NE, 0, THEN
 		REAL, 1
		!wybór elementów modelu œruby
		ESLV, S

		!definicja przekroju naprê¿eñ wstêpnych
		PSMESH, licznik_pretn, STRCAT('pretn_', CHRVAL(licznik_pretn)),, ALL,, 100, Z, ARG5/2,,,, testtt!STRCAT('pretn_elem_', CHRVAL(licznik_pretn))

		!definicja obi¹¿enia
		SLOAD, licznik_pretn, PL01, TINY, FORC, ARG6, 1, 2
	*ENDIF
	
	REAL, akt_real
	CSYS, akt_uklad
	CSDELE, 100
	*SET, akt_real
	*SET, akt_uklad

	ALLSEL, ALL

/EOF

uruchom
	/INPUT, 'skrypty/main', 'mac'
/EOF